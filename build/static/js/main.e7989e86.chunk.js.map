{"version":3,"sources":["Redux/cake/CakeTypes.js","Redux/cake/CakeActions.js","Redux/IceCream/IceCreamType.js","components/cakeContainer.js","components/IceCreamContainer.js","Redux/IceCream/IceCreamAction.js","components/NewCakeContainer.js","Redux/cake/CakeReducer.js","Redux/IceCream/IceCreamReducer.js","Users/UserType.js","Users/UserReducer.js","Redux/Rootreducer.js","Redux/Store.js","components/ItemContainer.js","Users/UserAction.js","components/UserContainer.js","App.js","reportWebVitals.js","index.js","components/UserContainer.module.css"],"names":["BUY_CAKE","SELL_CAKE","buycake","number","console","log","type","payload","sellCake","BUY_ICE_CREAM","connect","state","numofcakes","cake","count","dispatch","props","onClick","SELL_ICE","numOfIce","Ice","buyIce","sellIce","useState","setNumber","onChange","event","target","value","initialstate","Cakereducer","action","iceState","IceReducer","USER_REQUEST","USER_SUCCESS","USER_FAILURE","loading","user","error","ReducerUser","RootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","thunk","useprops","item","ownprops","newitem","FetchUserRequest","Fetchuser","axios","get","then","response","users","data","FetchUserSuccess","catch","errormsg","message","FetchUserFailure","userData","useEffect","className","classes","h2","parentdiv","map","card","glowonhover","id","name","username","email","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e7989e86.chunk.js","sourcesContent":["export const BUY_CAKE  = \"BUY_CAKE\", SELL_CAKE  = ' SELL_CAKE'","//action\r\nimport  { BUY_CAKE, SELL_CAKE} from './CakeTypes'\r\nexport const buycake = (number) =>{\r\n    console.log( 'action' + number);\r\n    return {\r\n         type : BUY_CAKE,\r\n         payload:number\r\n    }\r\n}\r\n\r\nexport const sellCake =(number)=>{\r\n    return {\r\n        type : SELL_CAKE,\r\n        payload : number\r\n    }\r\n} ","export const BUY_ICE_CREAM  = 'BUY_ICE_CREAM' , SELL_ICE = ' SELL_ICE'","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { buycake, sellCake } from '../Redux/cake/CakeActions';\r\n\r\n\r\nconst CakeContainer = (props) => {\r\n    let cake = ''\r\n    props.numofcakes === 0\r\n        ? cake =\r\n        <div>\r\n            <p>no more cakes available</p>\r\n            <button onClick={props.sellCake} > sell cake </button>\r\n        </div>\r\n        : cake = <div>\r\n            <h1> number of cakes  available in the shop - {props.numofcakes}  </h1>\r\n            <button onClick={props.buycake} > buy cake </button>\r\n            <button onClick={props.sellCake} > sell cake </button>\r\n            <h3> cart - {props.count} </h3>\r\n        </div>\r\n    return cake;\r\n}\r\n\r\n\r\nconst mapStoreToProps = state => {\r\n    return {\r\n        numofcakes: state.cake.numofcakes,\r\n        count: state.cake.count\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        buycake: () => dispatch(buycake()),\r\n        sellCake: () =>  dispatch(sellCake()) \r\n    }\r\n}\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(CakeContainer);","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport {buyIce,sellIce} from '../Redux/IceCream/IceCreamAction';\r\n const iceContainer = (props) => {\r\n    let cake = ''\r\n    props.numOfIce === 0 \r\n        ? cake =\r\n        <div>\r\n            <p>no more ice cream available</p>\r\n            <button onClick={props.sellIce} > sell ice </button>\r\n        </div>\r\n        : cake = <div>\r\n            <h1> number of ice  available in the shop - {props.numOfIce}  </h1>\r\n            <button onClick={props.buyIce} > buy ice </button>\r\n            <button onClick={props.sellIce} > sell ice </button>\r\n            <h3> cart - {props.count} </h3>\r\n        </div>\r\n    return cake;\r\n}\r\n\r\n\r\nconst mapStoreToProps = state => {\r\n    return {\r\n        numOfIce: state.Ice.numOfIce,\r\n        count: state.Ice.count\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        buyIce: () => dispatch(buyIce()),\r\n        sellIce : ()=>dispatch(sellIce())\r\n      \r\n    }\r\n}\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(iceContainer);\r\n","import { BUY_ICE_CREAM ,SELL_ICE} from \"./IceCreamType\";\r\n\r\n export const buyIce = ()=>{\r\n    return  {\r\n        type: BUY_ICE_CREAM\r\n    }\r\n}\r\n export const sellIce = ()=>{\r\n    return{\r\n        type : SELL_ICE\r\n    }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { buycake, sellCake } from '../Redux/cake/CakeActions';\r\n\r\n\r\nconst NewCakeContainer = (props) => {\r\n    const [number, setNumber] = useState(1)\r\n    let cake = ''\r\n    console.log(props.numofcakes);\r\n    props.numofcakes === 0\r\n        ? cake =\r\n        <div>\r\n            <p>no more cakes available</p>\r\n            <button onClick={props.sellCake} > sell cake </button>\r\n        </div>\r\n        : cake = <div>\r\n            <h1> number of cakes  available in the shop - {props.numofcakes}  </h1>\r\n            <input type='text' onChange={(event) => setNumber(event.target.value)} />\r\n            <button onClick={() => props.buycake(number)} > buy {number} cake </button>\r\n            <button onClick={() => props.sellCake(number)}\r\n                onChange={(event) => setNumber(event.target.value)} >\r\n                sell {number}cake </button>\r\n            <h3> cart - {props.count} </h3>\r\n        </div>\r\n    return cake;\r\n}\r\n\r\n\r\nconst mapStoreToProps = state => {\r\n    return {\r\n        numofcakes: state.cake.numofcakes,\r\n        count: state.cake.count\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        buycake: (number) => dispatch(buycake(number)),\r\n        sellCake: (number) => dispatch(sellCake(number))\r\n    }\r\n}\r\nexport default connect(mapStoreToProps, mapDispatchToProps)(NewCakeContainer);","import { BUY_CAKE, SELL_CAKE } from \"./CakeTypes\";\r\n\r\nconst initialstate = {\r\n  count: 0,\r\n  numofcakes: 10\r\n}\r\nconst Cakereducer = (state = initialstate, action) => {\r\n\r\n  console.log('cekeredycer '  + state.numofcakes);\r\n\r\n  switch (action.type) {\r\n    case BUY_CAKE:\r\n      console.log( 'payload' + action.payload);\r\n      return {\r\n       \r\n        ...state,\r\n        numofcakes: state.numofcakes - action.payload,\r\n        count: state.count + 1,\r\n\r\n      }\r\n    case SELL_CAKE:\r\n      return {\r\n        numofcakes: state.numofcakes + action.payload,\r\n        count: state.count - 1\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default Cakereducer;","\r\nimport { BUY_ICE_CREAM ,SELL_ICE } from \"./IceCreamType\";\r\n\r\n\r\n const iceState = {\r\n    numOfIce : 20,\r\n    count : 0\r\n}\r\nconst IceReducer =(state = iceState , action )=>{\r\n switch (action.type) {\r\n     case BUY_ICE_CREAM:\r\n       return {\r\n           ...state,\r\n           numOfIce : state.numOfIce -1,\r\n           count : state.count +1\r\n       }\r\n       case SELL_ICE:\r\n           return{\r\n               numOfIce : state.numOfIce +1,\r\n               count : state.count -1\r\n           }\r\n \r\n     default:\r\n       return  state;\r\n }\r\n}\r\n\r\nexport default IceReducer;","export const USER_REQUEST = \"USER_REQUEST\"\r\nexport const USER_SUCCESS = \"USER_SUCCESS\"\r\nexport const USER_FAILURE = \"USER_FAILURE\"","\r\n\r\n\r\nimport { USER_REQUEST, USER_FAILURE, USER_SUCCESS } from './UserType'\r\n\r\nconst initialstate = {\r\n    loading: false,\r\n    user: [],\r\n    error: ''\r\n}\r\nconst ReducerUser = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case USER_SUCCESS:\r\n            return {\r\n\r\n                loading: false,\r\n                user: action.payload,\r\n                error: ''\r\n            }\r\n        case USER_FAILURE:\r\n            return {\r\n\r\n                loading: false,\r\n                user : [],\r\n                error: action.payload,\r\n\r\n            }\r\n\r\n        default:\r\n          return  state;\r\n    }\r\n}\r\nexport default ReducerUser;","import { combineReducers } from \"redux\";\r\nimport Cakereducer from \"./cake/CakeReducer\";\r\nimport IceReducer from \"./IceCream/IceCreamReducer\";\r\nimport ReducerUser from \"../Users/UserReducer\";\r\nconst RootReducer = combineReducers( {\r\n    cake : Cakereducer,\r\n    Ice : IceReducer,\r\n    user : ReducerUser,\r\n})\r\n\r\nexport default RootReducer;","import { createStore,applyMiddleware } from \"redux\";\r\nimport RootReducer from \"./Rootreducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport logger from 'redux-logger'\r\nimport thunk from \"redux-thunk\";\r\nconst store  = createStore(RootReducer ,composeWithDevTools(applyMiddleware(logger,thunk)) )\r\n\r\n\r\nexport default store;\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { buycake, sellCake } from '../Redux/cake/CakeActions';\r\nconst ItemContainer = (props)=>{\r\n    console.log( props.newitem);\r\n    return (\r\n        <div>\r\n            <h1>ITEM - {props.item } </h1>\r\n            <button onClick={props.newitem} > buy more</button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStoreToProps = ( state , useprops) =>{\r\n    const newpeops = useprops.cake ? state.cake.numofcakes : state.Ice.numOfIce;\r\n    return {\r\n        item : newpeops\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps =( dispatch,ownprops) =>{\r\n    const newprops = ownprops.cake ? dispatch(buycake() ) : dispatch ( sellCake())\r\n return {\r\n     newitem : newprops\r\n }\r\n}\r\n\r\nexport default connect( mapStoreToProps,mapDispatchToProps) (ItemContainer);\r\n\r\n\r\n","import { USER_REQUEST, USER_SUCCESS, USER_FAILURE } from \"./UserType\";\r\n\r\nimport axios from \"axios\";\r\nexport const FetchUserRequest = () => {\r\n    return {\r\n        type: USER_REQUEST\r\n    }\r\n}\r\n\r\n\r\nexport  const FetchUserSuccess = (users) => {\r\n    return {\r\n        type: USER_SUCCESS,\r\n        payload: users\r\n    }\r\n}\r\n\r\n\r\nexport  const FetchUserFailure = (error) => {\r\n    return {\r\n        type: USER_FAILURE,\r\n        payload: error\r\n    }\r\n}\r\n\r\n\r\nexport const Fetchuser = () => {\r\n    return (dispatch) => {\r\n        dispatch(FetchUserRequest)\r\n        axios.get('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=> {\r\n            const users = response.data;\r\n            console.log( \"prem\" + response.data);\r\n            dispatch(FetchUserSuccess(users))\r\n        })\r\n        .catch(error=>{\r\n            const errormsg = error.message;\r\n            dispatch( FetchUserFailure(errormsg))\r\n        })\r\n    }\r\n}","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Fetchuser } from '../Users/UserAction'\r\nimport classes from './UserContainer.module.css'\r\n\r\nconst UserContainer = ({ userData, Fetchuser }) => {\r\n    useEffect(() => {\r\n        Fetchuser()\r\n    }, [])\r\n    return Fetchuser.loading ? (\r\n        <h2> loading...</h2>)\r\n        : Fetchuser.error ? (<h2>error {userData.error} </h2>)\r\n            : (\r\n                <div >\r\n                    \r\n                    <h2 className={classes.h2}> JSON PLACEHOLDER API - User List </h2>\r\n                    <h2 className={classes.h2} > &#9194; scroll &#9193; </h2>\r\n                    <div className={classes.parentdiv}>\r\n                        {\r\n                            userData && userData.user && userData.user.map(user => {\r\n\r\n                                return <div key={user.id} className={classes.card, classes.glowonhover} >\r\n\r\n                                    {console.log('user.id' + user.id + user.name)}\r\n                                    <p> ID: {user.id} </p>\r\n                                    <p> NAME:{user.name} &#127948;</p>\r\n                                    <p> USER NAME : {user.username} </p>\r\n                                    <p>email : {user.email} </p>\r\n                                    \r\n\r\n                                </div>\r\n\r\n                            }\r\n\r\n                            )\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.user\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        Fetchuser: () => dispatch(Fetchuser())\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainer);","\nimport { Provider } from 'react-redux';\nimport './App.css';\nimport CakeContainer from './components/cakeContainer';\nimport HooksCakeContainer from './components/HooksCakeConatiner';\nimport IceCreamContainer from './components/IceCreamContainer';\nimport NewCakeContainer from './components/NewCakeContainer';\nimport store from './Redux/Store';\nimport ItemContainer from './components/ItemContainer';\nimport UserContainer from './components/UserContainer';\n\nfunction App() {\n  return (\n    <Provider store={store} >\n      <div className=\"App\">\n        {/* <HooksCakeContainer />\n     <IceCreamContainer />\n     <NewCakeContainer />\n     <CakeContainer />\n     <ItemContainer  cake/> */}\n        \n        <UserContainer />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React,{Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { compose, createStore } from 'redux';\n\n\nReactDOM.render(\n  \n  <React.StrictMode>\n    <App />\n   \n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n// const outerfunction =()=>{\n//   let outer = \"outer funct \"\n//     let outer2 = \"outer funct2 \"\n//   const innerfunction =()=>{\n//     const innermostfunction =()=>{\n//       return outer2;\n//     }\n//     console.log(innermostfunction() )\n//     return outer;\n  \n//   }\n\n//   console.log(innerfunction())\n \n// }\n//  outerfunction();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"UserContainer_card__1RKlh\",\"h2\":\"UserContainer_h2__3hqpZ\",\"parentdiv\":\"UserContainer_parentdiv__2FkZv\",\"glowonhover\":\"UserContainer_glowonhover__gdW6Z\",\"glowing\":\"UserContainer_glowing__2jw1s\"};"],"sourceRoot":""}